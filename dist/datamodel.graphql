type User {
  id: ID! @id
  username: String! @unique
  email: String! @unique
  bio: String
  phone: String
  posts: [Post!]!  @relation(name: "PostsOfUser", onDelete: CASCADE)
  postsCount: Int! 
  likes: [Like!]! @relation(name: "LikesOfUser", onDelete: CASCADE)
  comments: [Comment!]! @relation(name: "CommentsOfUser", onDelete: CASCADE)
  rooms: [Room!]!
  createdAt: DateTime! @createdAt
  updateAt: String
  isSelf: Boolean
}

type Post {
  id: ID! @id
  location: String
  caption: String!
  files: [File!]! @relation(name: "FilesOfPost", onDelete: CASCADE)
  likes: [Like!]! @relation(name: "LikeOfPost", onDelete: CASCADE)
  comments: [Comment!]! @relation(name: "CommentOfPost", onDelete: CASCADE)
  isLiked: Boolean!
  likeCount: Int!
  commentCount: Int!
  createAt: DateTime! @createdAt
  updateAt: String
}

type Like {
  id: ID! @id
}

type Group {
  id: ID! @id
}

type File {
  id: ID! @id
}

type Comment {
  id: ID! @id
}

type Room {
  id: ID! @id
}
